const types = require('types');
const events = require('app').events;

exports.levels = types.createEnum("error", "warn", "log", "info", "debug");
exports.defaultLevel = exports.levels.info;


function writeLog(name, level, message) {
  events.emit(name, "appendText", {t: Date.now(), level: level, message: message});
}

console.terminate = function (...args) {
  this.error(...args);
  process.exit(1);
};

function noop() {}
exports.create = function (name, properties = {}) {
  var logger = {
    debug: noop,
    info: noop,
    log: noop,
    warn: noop,
    error: noop,
    terminate: console.terminate
  };

  switch (properties.level || exports.defaultLevel) {
    case exports.levels.debug :
      logger.debug = writeLog.bind(logger, name, exports.levels.debug);
    case exports.levels.info :
      logger.info = writeLog.bind(logger, name, exports.levels.info);
    case exports.levels.log :
      logger.log = writeLog.bind(logger, name, exports.levels.log);
    case exports.levels.warn :
      logger.warn = writeLog.bind(logger, name, exports.levels.warn);
    case exports.levels.error :
      logger.error = writeLog.bind(logger, name, exports.levels.error);
  }
  return logger;
};
