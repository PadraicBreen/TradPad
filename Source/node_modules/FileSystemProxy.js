/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 * 
 */
var pathlib = require('path'); 
var fs = require('fs');
var mime = require('mime');
function listDirectory(path, success, fail) {
  fs.readdir(path, (err, files) => {
    if (err !== null) {
      fail(err);
      return;
    }
    success({type: "application/json", json: files});
  });
}


function createProxy(settings) {
  var rootPath = settings.fs;
  var roots;
  var rootsPrefix;
  if (settings.roots) {
    var roots = settings.roots;

    var rootsPrefix = [...settings.roots];
    for (let i = 0; i < rootsPrefix.length; i++) {
      rootsPrefix[i] = rootsPrefix[i] + "/";
    }
  } else {
    var roots = [];
    var rootsPrefix = [];
  }

  var readonly = settings.readonly;

  function nameToPath(name) {
    return pathlib.join(rootPath, name);
  }

 
  function get(name, success, fail) {
    try {
      var path = nameToPath(name);
      if (fs.lstatSync(path).isDirectory()) {
        listDirectory(path, success, fail);
        return;
      }
      success({type: mime.getType(name), stream: () => fs.createReadStream(path)});
    } catch (e) {
      fail(e);
    }
  }

  function getString(name, success, fail) {
    try {
      var path = nameToPath(name);
      success({type: mime.getType(name), string: () => fs.readFileSync(path, "utf8")});
    } catch (e) {
      fail(e);
    }
  }

  return {
    get: get,
    getString: getString
  };
}


// Functions which will be available to external callers
exports.createProxy = createProxy;
